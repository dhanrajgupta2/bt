// Exp 4 : Write a program in solidity to create Student data. Use the following constructs:
Structures
Arrays
Fallback
Deploy this as smart contract on Ethereum and Observe the transaction fee and Gas values.


// solution


// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract StudentData {
    
    struct Student {
        string name;
        uint age;
    }

    Student[] public students;

    // Add student to array
    function addStudent(string memory _name, uint _age) public {
        students.push(Student(_name, _age));
    }

    // Get student by index
    function getStudent(uint index) public view returns (string memory, uint) {
        require(index < students.length, "Invalid index");
        Student memory s = students[index];
        return (s.name, s.age);
    }

    // Fallback function
    fallback() external payable {
        // Fallback can be used to receive Ether or log data
    }

    // To view how much Ether was sent
    function getBalance() public view returns (uint) {
        return address(this).balance;
    }
}
